(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7196],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return s},kt:function(){return f}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(r),f=a,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||o;return r?t.createElement(d,i(i({ref:n},s),{},{components:r})):t.createElement(d,i({ref:n},s))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},74:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var t=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],l={sidebar_position:3},c={unversionedId:"tutorial-basics/Quick-Start",id:"tutorial-basics/Quick-Start",isDocsHomePage:!1,title:"Inicio R\xe1pido",description:"El siguiente es un ejemplo simple que define un esquema con un solo campo de tipo cadena `hola` y un m\xe9todo `Resolver` que devuelve la cadena `mundo`. Se realiza una consulta GraphQL contra este esquema con la salida resultante impresa en formato JSON.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/tutorial-basics/Quick-Start.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/Quick-Start",permalink:"/example-graphql-go/es/docs/next/tutorial-basics/Quick-Start",editUrl:"https://github.com/LuisIzarra/example-graphql-go/docs/tutorial-basics/Quick-Start.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Instalaci\xf3n",permalink:"/example-graphql-go/es/docs/next/tutorial-basics/Installation"},next:{title:"Ejecutando a GraphQL API",permalink:"/example-graphql-go/es/docs/next/intro"}},u=[],s={toc:u};function p(e){var n=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"El siguiente es un ejemplo simple que define un esquema con un solo campo de tipo cadena ",(0,o.kt)("inlineCode",{parentName:"p"},"hola")," y un m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"Resolver")," que devuelve la cadena ",(0,o.kt)("inlineCode",{parentName:"p"},"mundo"),". Se realiza una consulta GraphQL contra este esquema con la salida resultante impresa en formato JSON."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="main.go"',title:'"main.go"'},'    package main\n\n    import (\n      "encoding/json"\n      "fmt"\n      "log"\n\n      "github.com/graphql-go/graphql"\n    )\n\n    func main() {\n      // Schema\n      fields := graphql.Fields{\n        "hello": &graphql.Field{\n          Type: graphql.String,\n          Resolve: func(p graphql.ResolveParams) (interface{}, error) {\n            return "world", nil\n          },\n        },\n      }\n      rootQuery := graphql.ObjectConfig{Name: "RootQuery", Fields: fields}\n      schemaConfig := graphql.SchemaConfig{Query: graphql.NewObject(rootQuery)}\n      schema, err := graphql.NewSchema(schemaConfig)\n      if err != nil {\n        log.Fatalf("failed to create new schema, error: %v", err)\n      }\n\n      // Query\n      query := `\n        {\n          hello\n        }\n      `\n      params := graphql.Params{Schema: schema, RequestString: query}\n      r := graphql.Do(params)\n      if len(r.Errors) > 0 {\n        log.Fatalf("failed to execute graphql operation, errors: %+v", r.Errors)\n      }\n      rJSON, _ := json.Marshal(r)\n      fmt.Printf("%s \\n", rJSON) // {"data":{"hello":"world"}}\n    }\n')))}p.isMDXComponent=!0}}]);