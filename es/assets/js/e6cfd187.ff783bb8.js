(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[196],{74:function(e,a,n){"use strict";n.r(a),n.d(a,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(2122),t=n(9756),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:3},l={unversionedId:"tutorial-basics/Quick-Start",id:"tutorial-basics/Quick-Start",isDocsHomePage:!1,title:"Inicio R\xe1pido",description:"El siguiente es un ejemplo simple que define un esquema con un solo campo de tipo cadena `hola` y un m\xe9todo `Resolver` que devuelve la cadena `mundo`. Se realiza una consulta GraphQL contra este esquema con la salida resultante impresa en formato JSON.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/tutorial-basics/Quick-Start.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/Quick-Start",permalink:"/example-graphql-go/es/docs/tutorial-basics/Quick-Start",editUrl:"https://github.com/LuisIzarra/example-graphql-go/docs/tutorial-basics/Quick-Start.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Instalaci\xf3n",permalink:"/example-graphql-go/es/docs/tutorial-basics/Installation"},next:{title:"Ejecutando a GraphQL API",permalink:"/example-graphql-go/es/docs/intro"}},u=[],c={toc:u};function p(e){var a=e.components,n=(0,t.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"El siguiente es un ejemplo simple que define un esquema con un solo campo de tipo cadena ",(0,o.kt)("inlineCode",{parentName:"p"},"hola")," y un m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"Resolver")," que devuelve la cadena ",(0,o.kt)("inlineCode",{parentName:"p"},"mundo"),". Se realiza una consulta GraphQL contra este esquema con la salida resultante impresa en formato JSON."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="main.go"',title:'"main.go"'},'    package main\n\n    import (\n      "encoding/json"\n      "fmt"\n      "log"\n\n      "github.com/graphql-go/graphql"\n    )\n\n    func main() {\n      // Schema\n      fields := graphql.Fields{\n        "hello": &graphql.Field{\n          Type: graphql.String,\n          Resolve: func(p graphql.ResolveParams) (interface{}, error) {\n            return "world", nil\n          },\n        },\n      }\n      rootQuery := graphql.ObjectConfig{Name: "RootQuery", Fields: fields}\n      schemaConfig := graphql.SchemaConfig{Query: graphql.NewObject(rootQuery)}\n      schema, err := graphql.NewSchema(schemaConfig)\n      if err != nil {\n        log.Fatalf("failed to create new schema, error: %v", err)\n      }\n\n      // Query\n      query := `\n        {\n          hello\n        }\n      `\n      params := graphql.Params{Schema: schema, RequestString: query}\n      r := graphql.Do(params)\n      if len(r.Errors) > 0 {\n        log.Fatalf("failed to execute graphql operation, errors: %+v", r.Errors)\n      }\n      rJSON, _ := json.Marshal(r)\n      fmt.Printf("%s \\n", rJSON) // {"data":{"hello":"world"}}\n    }\n')))}p.isMDXComponent=!0}}]);